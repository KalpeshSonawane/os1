/**************************************************************************************** 

Title :  Write a program to solve optimal storage on tapes problem
             using Greedy approach.

 
******************************************************************************************/
#include<stdio.h>

#define max 1000

int RT(int array[],int no)
{
	int time=0,i,j;
	for(i=0;i<no;i++)
	{
		for(j=0;j<i;j++)
		{
			time=time+array[j];
		}
	}
	return time;
}

int search(int array[],int no,int value)
{
	int i=0;
	for(i=0;i<no;i++)
	{
		if(array[i]==value)
		return i;
	}
		return -1;
	
}

int swap(int array[],int no)
{
	int i,j,temp;
	for(i=0;i<no-1;i++)
	{
		for(j=i+1;j<no;j++)
		{
			if(array[i]>array[j])
			{
				temp=array[j];
				array[j]=array[i];
				array[i]=temp;
				
			}
		}
	}
}

void display(int array[],int no)
{
	int i;
  	for(i=0;i<no;i++)
	 {
	 	printf(" \t %d",array[i]);
	}	
}
int main()
{
	int program[10], clone[10];
	int retrival_time, no ,i,j;
	
	printf("\n enter the no of programe");
	scanf("%d",&no);
	
	for(i=0;i<no;i++)
	{
		printf("\n Enter the lenth of %d program is :",i+1);
		scanf("%d",&program[i]);
		clone[i]=program[i];
	}
	retrival_time=RT(program,no);
	printf("\n retrival time is %d",retrival_time);
	printf("\n");
	swap(clone,no);
		printf("\n");
	display(clone,no);
	
	for(j=0;j<no;j++)
	{
      int index = search(program,no,clone[j]);
      printf("\n program no %d and its lenth is %d",index+1,clone[j]);
	}
	retrival_time=RT(clone,no);
	printf("\n retrival time is %d",retrival_time);
	printf("\n");
}



