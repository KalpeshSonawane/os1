/**************************************************************************************** 

Title : Write a program to solve the travelling salesman problem
           and to print the path and the cost using Dynamic Programming
Name : kalpesh s. sonawane
Roll no : 55
 
******************************************************************************************/

#include<iostream>
#include<stdio.h>
using namespace std;

#define INT_MAX 999999

int n=4;

int dist[10][10] = {
        {1,2,3,4},
        {5,6,7,8},
        {3,4,5,6},
        {9,8,4,3}
};

int VISITED_ALL = (1<<n) -1;

int dp[16][4];
int path[20];
int p=0;


int  tsp(int mask,int pos){
	
	if(mask==VISITED_ALL){
		return dist[pos][0];
	}
	if(dp[mask][pos]!=-1){
	   return dp[mask][pos];
	}

	//Now from current node, we will try to go to every other node and take the min ans
	int ans = INT_MAX;

	//Visit all the unvisited cities and take the best route
	for(int city=0;city<n;city++){

		if((mask&(1<<city))==0){

			int newAns = dist[pos][city] + tsp( mask|(1<<city), city);
			ans = min(ans, newAns);
		}

	}
	
	return dp[mask][pos] = ans;
} 

int main(){
    /* init the dp array */
    for(int i=0;i<(1<<n);i++){
        for(int j=0;j<n;j++){
            dp[i][j] = -1;
        }
    }
    path[0]=0;
    p++;
	cout<<"Travelling Saleman Distance is "<<tsp(1,0)<<endl;
	
	for(int i=0;i<4;i++)
	{
		printf("%d-",path[i]);
	}

return 0;
}

/******************OUTPUT *********************************/
Travelling Saleman Distance is 17
0-0-0-0-
--------------------------------
Process exited after 0.02675 seconds with return value 0
Press any key to continue . . .